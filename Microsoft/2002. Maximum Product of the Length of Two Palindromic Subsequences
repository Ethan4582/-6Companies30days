

class Solution {
public:
    int maxProduct(string s) {
        ios_base::sync_with_stdio(false);
        cin.tie(nullptr);
        cout.tie(nullptr);
        int n = s.size();
        int target = 1 << n;
        unordered_map<int, int> mp;
        string temp;
        for(int mask = 0; mask < target; mask++)
        {
            temp = "";
            for(int i = 0; i < n; i++)
            {
                if(mask & (1 << i))
                {
                    temp += s[i];
                }
            }
            if(temp == string(temp.rbegin(), temp.rend()))
            {   
                mp[mask] = temp.size();
            }   
        }
        int res = 0;
        for(auto first = mp.begin(); first != mp.end(); first++)
        {
            for(auto second = next(first); second != mp.end(); second++)
            {
                if((first->first & second->first) == 0)
                {
                    res = max(res, first->second * second->second);
                }
            }
        }
        return res;
    }
};