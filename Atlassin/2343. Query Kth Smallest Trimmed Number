// Time: O(Q * NlogN)
// Space: O(Q + N)
class Solution {
public:
    vector<int> smallestTrimmedNumbers(vector<string>& A, vector<vector<int>>& Q) {
        vector<int> ans(Q.size()), id(A.size());
        iota(begin(id), end(id), 0);
        for (int i = 0; i < Q.size(); ++i) Q[i].push_back(i);
        sort(begin(Q), end(Q), [](auto &a, auto &b) { return a[1] > b[1]; });
        int len = A[0].size() + 1;
        for (auto &q : Q) {
            int k = q[0], newLen = q[1], index = q[2];
            if (newLen < len) {
                len = newLen;
                for (auto &s : A) s = s.substr(s.size() - newLen);
                sort(begin(id), end(id), [&](int a, int b) { return A[a] != A[b] ? A[a] < A[b] : a < b; });
            }
            ans[index] = id[k - 1];
        }
        return ans;
    }
};